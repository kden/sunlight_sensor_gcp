# .github/workflows/deploy_webapp.yml

name: Deploy Sunlight Web App

on:
  # Trigger the workflow on push events
  push:
    branches:
      - main # Or your default branch
    paths:
      # Only run when files in the web app's directory change
      - 'sunlight_web_app/**'
      # Also run if this workflow file itself changes
      - '.github/workflows/deploy_webapp.yml'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm --prefix ./sunlight_web_app install

      - name: Run Unit Tests
        run: npm --prefix ./sunlight_web_app run test

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always() # This ensures the report is published even if tests fail
        with:
          name: Jest Test Results
          path: sunlight_web_app/reports/junit.xml
          reporter: jest-junit

      - name: Set up Firebase Environment Variables
        id: set_firebase_env
        run: |
          # Use jq to parse the JSON secret and set each key as an output for the next step
          echo "apiKey=$(echo '${{ secrets.REACT_APP_FIREBASE_CONFIG }}' | jq -r .apiKey)" >> $GITHUB_OUTPUT
          echo "authDomain=$(echo '${{ secrets.REACT_APP_FIREBASE_CONFIG }}' | jq -r .authDomain)" >> $GITHUB_OUTPUT
          echo "projectId=$(echo '${{ secrets.REACT_APP_FIREBASE_CONFIG }}' | jq -r .projectId)" >> $GITHUB_OUTPUT
          echo "storageBucket=$(echo '${{ secrets.REACT_APP_FIREBASE_CONFIG }}' | jq -r .storageBucket)" >> $GITHUB_OUTPUT
          echo "messagingSenderId=$(echo '${{ secrets.REACT_APP_FIREBASE_CONFIG }}' | jq -r .messagingSenderId)" >> $GITHUB_OUTPUT
          echo "appId=$(echo '${{ secrets.REACT_APP_FIREBASE_CONFIG }}' | jq -r .appId)" >> $GITHUB_OUTPUT
          echo "measurementId=$(echo '${{ secrets.REACT_APP_FIREBASE_CONFIG }}' | jq -r .measurementId)" >> $GITHUB_OUTPUT

      - name: Build React App
        run: npm --prefix ./sunlight_web_app run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ steps.set_firebase_env.outputs.apiKey }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ steps.set_firebase_env.outputs.authDomain }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ steps.set_firebase_env.outputs.projectId }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ steps.set_firebase_env.outputs.storageBucket }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ steps.set_firebase_env.outputs.messagingSenderId }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ steps.set_firebase_env.outputs.appId }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ steps.set_firebase_env.outputs.measurementId }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SUNLIGHT_SENSOR }}'
          channelId: live
          projectId: ${{ vars.GCP_PROJECT_ID || secrets.GCP_PROJECT_ID }}
          entryPoint: ./sunlight_web_app
